
AWSTemplateFormatVersion: "2010-09-09"
Description: To create a VPC, 2 Subnets, Security Group, IGW, NAT, ec2

Parameters:
  VpcCIDR:
    Description: CIDR for VPC
    Type: String
    Default: 10.0.0.0/16

  SubnetPubCIDR:
    Description: CIDR Block for Public Subnet
    Type: String
    Default: 10.0.1.0/24

  SubnetPrivCIDR:
    Description: CIDR Block for Private Subnet
    Type: String
    Default: 10.0.2.0/24
  
  KeyName:
    Description: A key for ec2-instance
    Type: String
    Default: Don

  AMIID:
    Description: My image id for nova region
    Type: String
    Default: ami-00c39f71452c08778

  InstanceType:
      Description: WebServer EC2 instance type
      Type: String
      Default: t2.micro
      AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m1.small
      - m1.medium
      ConstraintDescription: must be a valid EC2 instance type.

  SecurityGroupPorts:
    Description: Simple Description of a Number Parameter, with MinValue and MaxValue
    Type: Number
    AllowedValues: 
      - 80
      - 443
      - 22    

  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

  VolumeSize:
    Description: EBS Volume size
    Type: Number
    Default: 8
    MinValue: 8
    MaxValue: 100
    ConstraintDescription: must be a number between 8 to 100 Gb

Resources:
  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      #EnableDnsSupport: true
      Tags:
        - Key: keyname
          Value: value

  PubSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1a
      VpcId: !Ref myVPC
      CidrBlock: !Ref SubnetPubCIDR
      Tags:
        - Key: Name
          Value: SubnetPub

  PrivSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1b
      VpcId: !Ref myVPC
      CidrBlock: !Ref SubnetPrivCIDR
      Tags:
        - Key: Name
          Value: SubnetPriv
    
  igwName:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: keyname
          Value: value

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref myVPC
      InternetGatewayId: !Ref igwName

  # https://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route-table.html
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
        - Key: keyname
          Value: value
      VpcId: !Ref myVPC

  routeName:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref igwName

  routeTableAssocName:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PubSubnet
      RouteTableId: !Ref RouteTable

  NATGateway:
   Type: AWS::EC2::NatGateway
   Properties:
      AllocationId: !GetAtt NATGatewayEIP.AllocationId
      SubnetId: !Ref PubSubnet
      Tags:
      - Key: stack
        Value: production
        
  NATGatewayEIP:
    Type: AWS::EC2::EIP
    Properties:
        Domain: myVPC

  RouteNATGateway:
    DependsOn: NATGateway
    Type: AWS::EC2::Route
    Properties:
        RouteTableId: !Ref RouteTable
        DestinationCidrBlock: !Ref SubnetPubCIDR
        NatGatewayId: !Ref NATGateway

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: !Ref SecurityGroupPorts
        ToPort: !Ref SecurityGroupPorts
        CidrIp:
          Ref: SSHLocation
  
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId:
        Ref: AMIID
      InstanceType:
        Ref: InstanceType
      SecurityGroups:
      - Ref: InstanceSecurityGroup
      KeyName:
        Ref: KeyName      
      BlockDeviceMappings:
        -
          DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp2            
            DeleteOnTermination: true
            VolumeSize: !Ref VolumeSize
  